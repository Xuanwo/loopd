// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/grpc/loopd.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRequest) Reset()         { *m = NewRequest{} }
func (m *NewRequest) String() string { return proto.CompactTextString(m) }
func (*NewRequest) ProtoMessage()    {}
func (*NewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b73747ef4b3851b8, []int{0}
}

func (m *NewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRequest.Unmarshal(m, b)
}
func (m *NewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRequest.Marshal(b, m, deterministic)
}
func (m *NewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRequest.Merge(m, src)
}
func (m *NewRequest) XXX_Size() int {
	return xxx_messageInfo_NewRequest.Size(m)
}
func (m *NewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewRequest proto.InternalMessageInfo

func (m *NewRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b73747ef4b3851b8, []int{1}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type OKResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OKResponse) Reset()         { *m = OKResponse{} }
func (m *OKResponse) String() string { return proto.CompactTextString(m) }
func (*OKResponse) ProtoMessage()    {}
func (*OKResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b73747ef4b3851b8, []int{2}
}

func (m *OKResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OKResponse.Unmarshal(m, b)
}
func (m *OKResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OKResponse.Marshal(b, m, deterministic)
}
func (m *OKResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OKResponse.Merge(m, src)
}
func (m *OKResponse) XXX_Size() int {
	return xxx_messageInfo_OKResponse.Size(m)
}
func (m *OKResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OKResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OKResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NewRequest)(nil), "NewRequest")
	proto.RegisterType((*DeleteRequest)(nil), "DeleteRequest")
	proto.RegisterType((*OKResponse)(nil), "OKResponse")
}

func init() { proto.RegisterFile("service/grpc/loopd.proto", fileDescriptor_b73747ef4b3851b8) }

var fileDescriptor_b73747ef4b3851b8 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0xcf, 0xc9, 0xcf, 0x2f, 0x48, 0xd1, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe1, 0xe2, 0xf2, 0x4b, 0x2d, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62,
	0xca, 0x4c, 0x51, 0x92, 0xe7, 0xe2, 0x75, 0x49, 0xcd, 0x49, 0x2d, 0x49, 0xc5, 0xa5, 0x80, 0x87,
	0x8b, 0xcb, 0xdf, 0x3b, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0xd5, 0xc8, 0x9f, 0x8b, 0xd5,
	0x07, 0x64, 0xb6, 0x90, 0x3c, 0x17, 0xb3, 0x5f, 0x6a, 0xb9, 0x10, 0xb7, 0x1e, 0xc2, 0x6c, 0x29,
	0x6e, 0x3d, 0x84, 0x4a, 0x21, 0x55, 0x2e, 0x36, 0x88, 0xc1, 0x42, 0x7c, 0x7a, 0x28, 0x36, 0xa0,
	0x28, 0x73, 0x62, 0x8b, 0x62, 0x01, 0xb9, 0x38, 0x89, 0x0d, 0xec, 0x58, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd5, 0x50, 0xea, 0xc3, 0xc8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LoopdClient is the client API for Loopd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoopdClient interface {
	New(ctx context.Context, in *NewRequest, opts ...grpc.CallOption) (*OKResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*OKResponse, error)
}

type loopdClient struct {
	cc *grpc.ClientConn
}

func NewLoopdClient(cc *grpc.ClientConn) LoopdClient {
	return &loopdClient{cc}
}

func (c *loopdClient) New(ctx context.Context, in *NewRequest, opts ...grpc.CallOption) (*OKResponse, error) {
	out := new(OKResponse)
	err := c.cc.Invoke(ctx, "/Loopd/New", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loopdClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*OKResponse, error) {
	out := new(OKResponse)
	err := c.cc.Invoke(ctx, "/Loopd/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoopdServer is the server API for Loopd service.
type LoopdServer interface {
	New(context.Context, *NewRequest) (*OKResponse, error)
	Delete(context.Context, *DeleteRequest) (*OKResponse, error)
}

// UnimplementedLoopdServer can be embedded to have forward compatible implementations.
type UnimplementedLoopdServer struct {
}

func (*UnimplementedLoopdServer) New(ctx context.Context, req *NewRequest) (*OKResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method New not implemented")
}
func (*UnimplementedLoopdServer) Delete(ctx context.Context, req *DeleteRequest) (*OKResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterLoopdServer(s *grpc.Server, srv LoopdServer) {
	s.RegisterService(&_Loopd_serviceDesc, srv)
}

func _Loopd_New_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoopdServer).New(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Loopd/New",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoopdServer).New(ctx, req.(*NewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Loopd_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoopdServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Loopd/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoopdServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Loopd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Loopd",
	HandlerType: (*LoopdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "New",
			Handler:    _Loopd_New_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Loopd_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/grpc/loopd.proto",
}
